version: '2.2'
services:
  postgres:
    build: database/.
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - database-data_production:/var/lib/postgresql/data/ # persist data even if container shuts down
    expose:
      - 5433
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: crosscheck_database
  backend:
    build: backend/.
    restart: always
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy         
        #healthcheck:
        #test: curl -f localhost:8182/be-cross-check/ || exit 1
        #interval: 10s
        #timeout: 5s
        #retries: 5
    container_name: crosscheck_backend
  frontend:
    build: frontend/.
    volumes:
       - ./frontend/config/config.json:/usr/share/nginx/html/config.json
    container_name: crosscheck_frontend
  graphql-engine:
    image: hasura/graphql-engine:v1.3.3
    links:
      - postgres
      - backend
    restart: always
    environment: 
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5433/${POSTGRES_DB}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${GRAPHQL_PASSWORD}
      HASURA_GRAPHQL_AUTH_HOOK: "http://crosscheck_backend:8080/auth/hasura-role"

volumes:
  database-data_production: # named volumes can be managed easier using docker-compose
