version: '2.2'
services:
  postgres:
    build: database/.
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - ../../../crosscheck_data/database_data:/var/lib/postgresql/data/
      - ./database/crosscheck-postgres.conf:/etc/postgresql/postgresql.conf
      - ./database/crosscheck-pg_hba.conf:/etc/postgresql/pg_hba.conf
    expose:
      - 5433
    ports:
      - "0.0.0.0:5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: crosscheck_database
  backend:
    build: backend/.
    restart: always
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy         
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null localhost:8080/be-cross-check/ || exit 1"]
      interval: 10s
    container_name: crosscheck_backend
  frontend:
    build: frontend/.
    volumes:
       - ./frontend/config/config.json:/usr/share/nginx/html/config.json
    container_name: crosscheck_frontend
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://localhost || exit 1"]
      interval: 10s
  graphql-engine:
    image: hasura/graphql-engine:v1.3.3
    container_name: crosscheck_graphql
    links:
      - postgres
      - backend
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://localhost:8080/v1/version || exit 1"]
      interval: 10s
    environment: 
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@crosscheck_database:5432/${POSTGRES_DB}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${GRAPHQL_PASSWORD}
      HASURA_GRAPHQL_AUTH_HOOK: "http://crosscheck_backend:8080/be-cross-check/auth/hasura-role"
      NOTIFICATIONS_ENDPOINT: "http://crosscheck_backend:8080/be-cross-check/notifications/send"
      NOTIFICATIONS_SECRET: "secret"
  minio:
    image: minio/minio
    volumes:
      - ../../../crosscheck_data/minio_data:/data
    container_name: crosscheck_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    command: server /data
    user: 1001:1001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
