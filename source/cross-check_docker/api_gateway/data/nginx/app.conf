map $http_upgrade $connection_upgrade {
    default upgrade;
    ''	    close;
}

server {
    listen 80;
    server_name example.org;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name example.org;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/example.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.org/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        if ($request_method = OPTIONS ) {
        return 200;
        }

        proxy_pass  http://crosscheck_frontend;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        if ( $http_MinioCustomHeader != "" ) {
         proxy_pass http://crosscheck_minio:9000;
       }
    }

    location ^~ /be-cross-check/ {
        proxy_pass http://crosscheck_backend:8080/be-cross-check/;
        proxy_redirect http:// https://;

        proxy_set_header	Host			$host:$server_port;
        proxy_set_header	X-Real-IP		$remote_addr;
        proxy_set_header	X-Forwarded-For		$proxy_add_x_forwarded_for;
        proxy_set_header	X-Forwarded-Proto	$scheme;
        proxy_max_temp_file_size 0;

        # WebSocket headers
        proxy_set_header	Upgrade			$http_upgrade;
        proxy_set_header	Connection		$connection_upgrade;
        proxy_set_header	X-Scheme		$scheme;

        # This is the maximum upload size
        client_max_body_size	10m;
        client_body_buffer_size	128k;

        proxy_connect_timeout	90;
        proxy_send_timeout	90;
        proxy_read_timeout	90;

        proxy_temp_file_write_size 64k;

        # Required for new HTTP-based CLI
        proxy_http_version 1.1;
        proxy_request_buffering off;
        proxy_buffering off; # Required for HTTP-based CLI to work over SSL
    }

    location ^~ /be-hasura/ {
        proxy_pass http://crosscheck_graphql:8080/;
        proxy_redirect http:// https://;

        proxy_set_header   Host             $host:$server_port;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_max_temp_file_size 0;

        # WebSocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Scheme $scheme;

	    # This is the maximum upload size
        client_max_body_size       10m;
        client_body_buffer_size    128k;

        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;

        proxy_temp_file_write_size 64k;

        # Required for new HTTP-based CLI
        proxy_http_version 1.1;
        proxy_request_buffering off;
        proxy_buffering off; # Required for HTTP-based CLI to work over SSL
    }
    
    # location ^~ /postgres/ {
    #    proxy_pass http://crosscheck_database:5432;
    #    proxy_redirect http:// https://;
    #    allow   147.175.150.231;
    #   	deny    all;
    # }
}
